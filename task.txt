Тестовое задание

Разработать с помощью Django Framework и DRF проект, который хранит и обрабатывает информацию об автомобилях.
Мы должны иметь возможность авторизироваться в админ панели
Управлять моделями, вручную изменять в админке информацию
Запуск интеграции (принудительно)
Запуск автоматической интеграции (по cron)
Вывод авто с фильтрацией и пагинацией
Просмотр информации об авто
Написать несколько тестов (любых)
Основная цель показать, как вы строите архитектуру проекта, как используете батарейки Django, как пишите бизнес-логику.

Модели, которые должны использоваться (поля могут корректироваться):
Car (Автомобили)
Id 
Name
Price
Dc
Model
Created
Updated
DealerCenter (Дилерские центры)
Id
Name
Address
Brand (Бренд или марка авто)
Id
name
CarModel (Модели авто)
Id
name
CarImage (Картинки авто)
Id
Path
Created
Updated
Так же вы можете добавлять свои модели (на ваше усмотрение) выстраивая на ваш взгляд структуру наиболее подходящую для данного проекта

Логика взаимодействия автомобилей:
Car может быть привязан к нескольким ДЦ
Car может содержать 1 и более картинок (не допускать дубликатов картинок)

Админ панель Django для:
Car (Автомобили) Возможность привязывать картинки для авто в редактировании, а не только в отдельном разделе админке.
DealerCenter (Дилерские центры)
CarModel (Модели авто)

Автоматическая интеграция раз в час автомобилей:
Для ДЦ №1
http://export.maxposter.ru/legocar-used-all/3073-15554.xml
Для ДЦ №2
http://export.maxposter.ru/legocar-used-all/3413-78456.xml
Для ДЦ №3
http://kan-ftp.kanavto.ru/newavto/Avtoru_kae_renaultoren.xml

При интеграции картинки должны сохраняться на сервер и обрезаться если максимальный размер больше 2500 x 1500 (с сохранением пропорций).

Требования к Api:
Максимальное количество запросов в минуту до 30 (для одного пользователя)
Время выполнения запроса не больше 80 мс.

Api которое необходимо реализовать:
Вывод информации список автомобилей с возможностью фильтровать по (Цвет, модель, бренд) и пагинацией
Информация об автомобиле

Будет плюсом, если проект будет разворачиваться через Docker.

Если авто связано с моделью или брендом или ДЦ при выводе информации об авто должна в api так же указываться информация о привязанных объектах.

После того как вы передадите нам проект, мы должны без каких-либо трудностей запустить его, выполнить синхронизацию по фидам и проверить api сайта. 

Так же необходимо учесть, что интеграции могут быть совершенно разные как относительно полей, так и формата передачи информации самих данных. 

БД должна быть нормализована до 3 нормальной формы.

Тестовое задание рассчитано на выполнение не более 1 дня. 
По возможность необходимо использовать паттерны, оптимизации к коду и т.д.
